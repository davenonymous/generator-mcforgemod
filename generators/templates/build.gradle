buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = "${config.mod.version}"
group = "<%= group %>"
archivesBaseName = "<%= archivesBaseName %>"

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "${config.minecraft.version}-${config.forge.version}"
    runDir = "run"

    mappings = "snapshot_20171003"
}

repositories {
    <% if(dependencies.indexOf("Just Enough Items") != -1) { %>
    maven { // location of the maven that hosts JEI files
        name "Progwml Repo"
        url "http://dvs1.progwml6.com/files/maven"
    }
    <% } %>
}

dependencies {
    <% if(dependencies.indexOf("Just Enough Items") != -1) { %>
    deobfCompile "mezz.jei:jei_${config.minecraft.version}:${config.jei.version}:api"
    runtime "mezz.jei:jei_${config.minecraft.version}:${config.jei.version}"
    <% } %>
}

allprojects {
    if (System.getenv("TRAVIS") != null) {
        version += "-b${System.getenv("TRAVIS_BUILD_NUMBER")}"
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
